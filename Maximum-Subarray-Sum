for(int i = 0;i<n;i++){
   for(j=i;j<n;j++){
     int sum = 0;
     for(k=i;k<j;k++){
       sum += arr[k];
     }
    max = max(sum,max);
  }
}

// Time Complexity : O(n^3)
// Space Complexity : O(1)

Better Solution

for(int i = 0;i<n;i++){
   for(j=i;j<n;j++){
     int sum = 0;
     sum += arr[j];
     }
    max = max(sum,max);
  }
}

// Time Complexity : O(n^2)
// Space Complexity : O(1)

// Optimal Solution (Kadane's Algorithm)

for(int i = 0;i<n;i++){
        sum += arr[i];
        if(sum > maxi){
            maxi = sum;
        }
        if(sum<0){
            sum = 0;
        }
    }
    return maxi;
